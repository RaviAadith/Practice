static async Task<string> FetchDetailedRecords(string connectionString, List<string> recordIds)
{
    using (SqlConnection myConn = new SqlConnection(connectionString))
    {
        await myConn.OpenAsync();

        // Dynamically create parameter placeholders for the IN clause
        string inClause = string.Join(", ", recordIds.Select((id, index) => $"@RecordId{index}"));

        // SQL query with parameterized IN clause
        string MySql = $"SELECT RecordId, Details FROM Records WHERE RecordId IN ({inClause})";

        SqlCommand myCommand = new SqlCommand(MySql, myConn);

        // Add parameters to the command
        for (int i = 0; i < recordIds.Count; i++)
        {
            myCommand.Parameters.AddWithValue($"@RecordId{i}", recordIds[i]);
        }

        SqlDataAdapter myAdapter2 = new SqlDataAdapter
        {
            SelectCommand = myCommand
        };

        DataSet ds2 = new DataSet();
        myAdapter2.Fill(ds2);

        myConn.Close();

        // Build the string for the records
        StringBuilder sb = new StringBuilder();
        foreach (DataRow dr in ds2.Tables[0].Rows)
        {
            sb.AppendLine($"RecordId: {dr["RecordId"]}, Details: {dr["Details"]}");
        }

        return sb.ToString();
    }
}












